// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model AiChatSession {
  id           String                  @id @default(uuid())
  title        String                  @default("")
  status       AiChatSessionStatusType @default(active)
  metadata     Json?                   @default("{}")
  createdAt    DateTime?               @default(now())
  updatedAt    DateTime?               @default(now()) @updatedAt
  lastActiveAt DateTime?               @default(now()) @updatedAt
  user         User?                   @relation("AiChatSession_user", fields: [userId], references: [id])
  userId       String?                 @map("user")
  messages     AiMessage[]             @relation("AiMessage_session")

  @@index([userId])
}

model AiMessage {
  id               String              @id @default(uuid())
  content          String              @default("")
  author           AiMessageAuthorType
  model            String              @default("")
  createdAt        DateTime?           @default(now())
  temperature      Float?
  latencyMs        Int?
  promptTokens     Int?
  completionTokens Int?
  totalTokens      Int?
  toolName         String              @default("")
  toolArgs         Json?
  toolResult       Json?
  error            Json?
  session          AiChatSession?      @relation("AiMessage_session", fields: [sessionId], references: [id])
  sessionId        String?             @map("session")
  parentMessage    AiMessage?          @relation("AiMessage_parentMessage", fields: [parentMessageId], references: [id])
  parentMessageId  String?             @map("parentMessage")
  childMessages    AiMessage[]         @relation("AiMessage_parentMessage")

  @@index([sessionId])
  @@index([parentMessageId])
}

model CarePlan {
  id     String  @id @default(uuid())
  name   String  @default("")
  user   User?   @relation("CarePlan_user", fields: [userId], references: [id])
  userId String? @map("user")

  @@index([userId])
}

model ChatMessage {
  id        String     @id @default(uuid())
  message   String     @default("")
  createdAt DateTime?  @default(now())
  group     GroupChat? @relation("ChatMessage_group", fields: [groupId], references: [id])
  groupId   String?    @map("group")
  sender    User?      @relation("ChatMessage_sender", fields: [senderId], references: [id])
  senderId  String?    @map("sender")

  @@index([groupId])
  @@index([senderId])
}

model Checklist {
  id        String     @id @default(uuid())
  name      String     @default("")
  resources Resource[] @relation("Resource_checklist")
}

model ForumPost {
  id        String    @id @default(uuid())
  title     String    @default("")
  topic     String    @default("")
  content   String    @default("")
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  author    User?     @relation("ForumPost_author", fields: [authorId], references: [id])
  authorId  String?   @map("author")

  @@index([authorId])
}

model GroupChat {
  id        String        @id @default(uuid())
  groupName String        @default("")
  messages  ChatMessage[] @relation("ChatMessage_group")
  createdAt DateTime?     @default(now()) @map("created_at")
  updatedAt DateTime?     @updatedAt @map("updated_at")
  owner     User?         @relation("GroupChat_owner", fields: [ownerId], references: [id])
  ownerId   String?       @map("ownerId")
  members   User[]        @relation("GroupChat_members")

  @@index([ownerId])
}

model Parent {
  id               Int       @id @default(autoincrement())
  name             String    @default("")
  age              Int
  relationship     String    @default("")
  healthConditions Json?
  createdAt        DateTime? @default(now())
  updatedAt        DateTime? @updatedAt
  user             User?     @relation("Parent_user", fields: [userId], references: [id])
  userId           String?   @map("user")

  @@index([userId])
}

model Resource {
  id          Int        @id @default(autoincrement())
  link        String     @default("")
  content     String     @default("")
  checklist   Checklist? @relation("Resource_checklist", fields: [checklistId], references: [id])
  checklistId String?    @map("checklist")

  @@index([checklistId])
}

model User {
  id             String          @id @default(uuid())
  name           String          @default("")
  email          String          @unique @default("")
  password       String
  role           String?         @default("user")
  avatarUrl      String          @default("")
  age            Int?
  gender         String?
  privacyToggle  Boolean         @default(true)
  messages       ChatMessage[]   @relation("ChatMessage_sender")
  isAdmin        Boolean         @default(true)
  createdAt      DateTime?       @default(now())
  lastLoginDate  DateTime?       @default(now())
  lastUpdateDate DateTime?       @updatedAt
  carePlan       CarePlan[]      @relation("CarePlan_user")
  aiChatSessions AiChatSession[] @relation("AiChatSession_user")
  parents        Parent[]        @relation("Parent_user")
  ownedChats     GroupChat[]     @relation("GroupChat_owner")
  memberChats    GroupChat[]     @relation("GroupChat_members")
  forumPost      ForumPost[]     @relation("ForumPost_author")
}

enum AiChatSessionStatusType {
  active
  paused
  completed
  archived
}

enum AiMessageAuthorType {
  user
  assistant
  system
  tool
}
